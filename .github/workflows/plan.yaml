name: terraform - plan

on:
  pull_request:
    paths:
      - 'project/**.tf'

env:
  terraform_version: 1.0.7
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform-plan:
    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash

    if: github.event.pull_request.merged == false

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure GCP credentials
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.TF_ADMIN_KEYFILE }}
          export_default_credentials: true

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.terraform_version }}

      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=project fmt
        continue-on-error: true

      - name: Terraform init
        id: init
        run: terraform -chdir=project init

      - name: Terraform validate
        id: validate
        run: terraform -chdir=project validate -no-color
        continue-on-error: true

      - name: Terraform plan
        id: plan
        run: terraform -chdir=project plan -out=plans/tfplan -no-color
        continue-on-error: true

      - name: Show results
        uses: actions/github-script@v3
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            #### ‚ÑπÔ∏è GitHub Actions
            - Pusher: @${{ github.actor }}
            - Action: **${{ github.event_name }}**
            - Workflow: **${{ github.workflow }}**
            #### üñå Terraform Format and Style \`${{ steps.fmt.outcome }}\`
            #### ‚öôÔ∏è Terraform Initialization \`${{ steps.init.outcome }}\`
            #### ü§ñ Terraform Validation ${{ steps.validate.outputs.stdout }}
            #### üìñ Terraform Plan \`${{ steps.plan.outcome }}\`
            <details>
              <summary>Show Plan</summary>
            ${ process.env.PLAN }
            </details>
            `;
            github.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
      - name: Status check
        run: exit $(expr ${{ steps.fmt.outputs.exitcode }} + ${{ steps.validate.outputs.exitcode }} + ${{ steps.plan.outputs.exitcode }})
